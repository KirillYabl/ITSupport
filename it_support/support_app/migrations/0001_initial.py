# Generated by Django 4.1.7 on 2023-02-15 07:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_nick', models.CharField(max_length=32, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator('^\\w{5,32}$')], verbose_name='ник в telegram')),
                ('role', models.CharField(choices=[('Клиент', 'Client'), ('Подрядчик', 'Contractor'), ('Менеджер', 'Manager')], max_length=30, verbose_name='роль')),
                ('status', models.CharField(choices=[('Активный', 'Active'), ('Неактивный', 'Inactive')], db_index=True, max_length=30, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'пользователь бота',
                'verbose_name_plural': 'пользователи бота',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('orders_limit', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='максимальное число заявок в месяц')),
                ('reaction_time_minutes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='время реакции на заявку в минутах')),
                ('can_reserve_contractor', models.BooleanField(verbose_name='возможность закрепить подрядчика за собой')),
                ('can_see_contractor_contacts', models.BooleanField(verbose_name='возможность увидеть контакты подрядчика')),
            ],
            options={
                'verbose_name': 'тариф',
                'verbose_name_plural': 'тарифы',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('botuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='support_app.botuser')),
                ('paid', models.BooleanField(db_index=True, verbose_name='оплачен ли тариф')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='clients', to='support_app.tariff')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
            bases=('support_app.botuser',),
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('botuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='support_app.botuser')),
            ],
            options={
                'verbose_name': 'подрядчик',
                'verbose_name_plural': 'подрядчики',
            },
            bases=('support_app.botuser',),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('botuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='support_app.botuser')),
            ],
            options={
                'verbose_name': 'менеджер',
                'verbose_name_plural': 'менеджеры',
            },
            bases=('support_app.botuser',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.TextField(verbose_name='задание')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='дата и время создания')),
                ('assigned_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='дата и время взятия в работу')),
                ('closed_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='дата и время выполнения')),
                ('status', models.CharField(choices=[('создан', 'Created'), ('в работе', 'In Work'), ('закрыт', 'Closed'), ('отменен', 'Cancelled')], db_index=True, default='создан', max_length=30, verbose_name='статус')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='support_app.client')),
                ('contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='support_app.contractor')),
            ],
            options={
                'verbose_name': 'тариф',
                'verbose_name_plural': 'тарифы',
            },
        ),
    ]
